import{_ as a,c as t,o as s,ae as i}from"./chunks/framework.BGzr-fyY.js";const u=JSON.parse('{"title":"Interface: DataGetModel<T>","description":"","frontmatter":{},"headers":[],"relativePath":"app/interfaces/DataGetModel.md","filePath":"app/interfaces/DataGetModel.md","lastUpdated":null}'),r={name:"app/interfaces/DataGetModel.md"};function l(n,e,h,p,d,o){return s(),t("div",null,e[0]||(e[0]=[i('<h1 id="interface-datagetmodel-t" tabindex="-1">Interface: DataGetModel&lt;T&gt; <a class="header-anchor" href="#interface-datagetmodel-t" aria-label="Permalink to &quot;Interface: DataGetModel\\&lt;T\\&gt;&quot;">​</a></h1><p>Interface representing a data model retrieved from the cache.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code></p><p>The type of the value stored.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="expiresat" tabindex="-1">expiresAt <a class="header-anchor" href="#expiresat" aria-label="Permalink to &quot;expiresAt&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expiresAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number;</span></span></code></pre></div><p>The timestamp in milliseconds when the value expires.</p><h4 id="inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DataModel.expiresAt</span></span></code></pre></div><hr><h3 id="isexpired" tabindex="-1">isExpired <a class="header-anchor" href="#isexpired" aria-label="Permalink to &quot;isExpired&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isExpired</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: boolean;</span></span></code></pre></div><p>Whether the value has expired.</p><hr><h3 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>The value stored in the cache.</p><h4 id="inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DataModel.value</span></span></code></pre></div>',22)]))}const k=a(r,[["render",l]]);export{u as __pageData,k as default};
